package com.benqzl.controller.system;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.benqzl.controller.BasicController;
import com.google.gson.Gson;

@Controller
@RequestMapping("reflush")
public class ReflushController extends BasicController {
	public ReflushController() {
		super(ReflushController.class);
	}

	@RequestMapping(value = "", method = RequestMethod.GET)
	public ModelAndView reflushInfo(HttpServletRequest request,
			HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("system/reflushInfo");
		String time = ReadLine(response, request);
		Gson gson = new Gson();
		Time reflushtime = gson.fromJson(time, Time.class);
		if(reflushtime==null){
			mv.addObject("reflushtime", "");
		}else{
		mv.addObject("reflushtime", reflushtime.getReflushtime());}
		return mv;
	}
	@RequestMapping(value = "save", method = RequestMethod.POST)
	@ResponseBody
	public String save(HttpServletRequest request,
			HttpServletResponse response, String jsonStr) {
		// 获取上传路径
		ServletContext sc = request.getSession().getServletContext();
		String filepath = sc
				.getRealPath("/upload/reflushtime/reflushtime.json");
		File file = new File(filepath);
		try {
			FileWriter fw = new FileWriter(file);
			PrintWriter out = new PrintWriter(fw);
			out.write(jsonStr);
			out.println();
			fw.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return "true";
	}

	@SuppressWarnings("resource")
	public String ReadLine(HttpServletResponse response,
			HttpServletRequest request) {
		// 获取文件路径
		ServletContext sc = request.getSession().getServletContext();
		String filepath = sc
				.getRealPath("/upload/reflushtime/reflushtime.json");
		File file = new File(filepath);
		BufferedReader reader = null;
		String laststr = "";
		if (!file.exists()) {
			request.setAttribute("message", "数据不存在");
			System.out.println("文件不存在");
		} else {
			try {
				reader = new BufferedReader(new FileReader(file));
				String tempString = null;
				while ((tempString = reader.readLine()) != null) {
					laststr = laststr + tempString;
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return laststr;
	}

	public class Time {
		private String reflushtime;

		public String getReflushtime() {
			return reflushtime;
		}

		public void setReflushtime(String reflushtime) {
			this.reflushtime = reflushtime;
		}
	}

}

package com.benqzl.controller.system;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.benqzl.controller.BasicController;
import com.benqzl.pojo.system.SysParameter;
import com.benqzl.service.system.SysParameterService;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;

@Controller
@RequestMapping("sysParmeter")
public class SysParmeterController extends BasicController{

	@Autowired
	private SysParameterService service;
	
	public SysParmeterController() {
		super(SysParmeterController.class);
	}
	
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ModelAndView index() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/system/sysParmeter");
		return mv;
	}
	
	@RequestMapping(value = "sysParmeterInfo", method = RequestMethod.GET)
	public ModelAndView userInfo(String id) {
		ModelAndView mv = new ModelAndView();
		SysParameter parameter = new SysParameter();
		try {
			parameter = service.selectByPrimaryKey(id);
		} catch (Exception e) {
			e.printStackTrace();
		}
		mv.addObject("parameter", parameter);
		mv.setViewName("system/sysParmeterInfo");
		return mv;
	}
	
	
	@RequestMapping(value = "bind", method = RequestMethod.GET)
	@ResponseBody
	public String bind(){
		List<SysParameter> list = new ArrayList<>();
		try {
			list=service.selectAll();
		} catch (Exception e) {
			e.printStackTrace();
		}
		gson = new GsonBuilder().registerTypeAdapter(SysParameter.class, new JsonSerializer<SysParameter>() {
			@Override
			public JsonElement serialize(SysParameter arg0, Type arg1,
					JsonSerializationContext arg2) {
				JsonObject json = new JsonObject();
				json.addProperty("id", arg0.getId());
				json.addProperty("pkey", arg0.getPkey());
				json.addProperty("name", arg0.getName());
				json.addProperty("memo", arg0.getMemo());
				return json;
			}
		}).create();
		String jsonStr = null;
		jsonStr = gson.toJson(list);
		return jsonStr;
	}
	
	/**
	 * 
	 * @param jsonStr
	 * @return 
	 */
	@RequestMapping(value = "update", method = RequestMethod.POST)
	@ResponseBody
	public String update(String jsonStr){
		SysParameter parameter  =gson.fromJson(jsonStr, SysParameter.class);
		try {
			service.updateByPrimaryKeySelective(parameter);
		} catch (Exception e) {
			e.printStackTrace();
			return "{'result':false,'msg':'修改失敗！'}";
		}
		return "{'result':true}";
	}

}
